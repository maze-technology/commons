name: Build & Security Scan

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  # INFO: Daily security scan
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch: {}

permissions:
  contents: read
  actions: read
  checks: write
  issues: write # Required for posting comments on PRs

env:
  JAVA_HOME: '' # INFO: Force JAVA_HOME to be empty, so gradle will use the sdkman java version
  NODE_VERSION: '22'
  PYTHON_VERSION: '3.13'

jobs:
  build_scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache SDKMAN
        uses: actions/cache@v4
        with:
          path: ~/.sdkman
          key: sdkman-${{ runner.os }}-${{ hashFiles('.sdkmanrc') }}

      - name: Install SDKMAN
        uses: sdkman/sdkman-action@b1f9b696c79148b66d3d3a06f7ea801820318d0f

      # INFO: Tell Gradle which JDK to use *regardless* of what happens to JAVA_HOME
      - name: Point Gradle at the SDKMAN JDK
        run: echo "JAVA_HOME=$HOME/.sdkman/candidates/java/current" >> $GITHUB_ENV

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup Coursier
        uses: coursier/setup-action@v1

      - name: Setup SmithyTranslate
        run: cs install --channel https://disneystreaming.github.io/coursier.json smithytranslate

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Buf
        run: npm install -g @bufbuild/buf

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Build with Makefile
        run: make build

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          files: |
            build/test-results/**/*.xml

      - name: Publish Checkstyle Results
        uses: jwgmeligmeyling/checkstyle-github-action@v1
        with:
          path: 'build/reports/checkstyle/main.xml'

      - name: Archive test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test report
          path: build/reports/tests

      - name: Add coverage to PR
        uses: madrapps/jacoco-report@v1.7.1
        if: github.event_name == 'pull_request'
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80

      - name: Verify Test Coverage
        if: github.event_name == 'pull_request'
        run: ./gradlew jacocoTestCoverageVerification
        continue-on-error: false

      - name: Code vulnerability scan
        uses: anchore/scan-action@v6
        with:
          path: '${{ github.workspace }}/build/libs'
          fail-build: true
          severity-cutoff: 'high'
          output-format: table
          only-fixed: false
